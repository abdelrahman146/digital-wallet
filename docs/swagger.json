{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "petstore.swagger.io",
    "basePath": "/api/v1/backoffice",
    "paths": {
        "/wallets": {
            "post": {
                "description": "Create a wallet based on the provided request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallet"
                ],
                "summary": "Create a new wallet",
                "parameters": [
                    {
                        "description": "Create Wallet Request",
                        "name": "wallet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CreateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/model.Wallet"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/api.ErrorResponseBody"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.ErrorResponseBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "httpCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "api.SuccessResponse": {
            "type": "object",
            "properties": {
                "result": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.Wallet": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "isArchived": {
                    "type": "boolean"
                },
                "isMonetary": {
                    "type": "boolean"
                },
                "limitGlobal": {
                    "type": "integer"
                },
                "limitPerUser": {
                    "type": "integer"
                },
                "minimumWithdrawal": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pointsExpireAfter": {
                    "description": "@swaggertype string",
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.Interval"
                        }
                    ]
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "service.CreateWalletRequest": {
            "type": "object",
            "required": [
                "currency",
                "id",
                "name"
            ],
            "properties": {
                "currency": {
                    "type": "string",
                    "maxLength": 4,
                    "minLength": 1
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "id": {
                    "type": "string"
                },
                "isMonetary": {
                    "type": "boolean"
                },
                "limitGlobal": {
                    "type": "integer"
                },
                "limitPerUser": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "pointsExpireAfter": {
                    "type": "integer"
                }
            }
        },
        "types.Interval": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    }
}